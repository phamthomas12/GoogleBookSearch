{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\MonashBootCamp\\\\GoogleBookSearch\\\\client\\\\src\\\\pages\\\\Saved.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Wrapper from \"../components/Wrapper\";\nimport API from \"../utils/API\";\nimport SavedBooks from \"../components/SavedBooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Saved = () => {\n  _s();\n\n  // Setting initial state\n  const [book, setBook] = useState([]); // Load all saved books and store them with setBooks\n\n  useEffect(() => {\n    loadBooks();\n  }, []); // Load all saved books and set them to books\n\n  const loadBooks = () => {\n    API.getSavedBooks().then(response => {\n      console.log(response.data);\n      setBook(response.data);\n    }).catch(err => console.log(err));\n  }; // Removes a book from the database with a give id, then reloads books from db\n\n\n  const removeBook = id => {\n    API.deleteBook(id).then(response => loadBooks()).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: book.length > 0 ? book.map(book => {\n      return /*#__PURE__*/_jsxDEV(SavedBooks, {\n        book: book,\n        removeBook: removeBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this);\n    }) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Saved, \"Y4xbcQTNlsv9Yejrr4YpksB4Kqg=\");\n\n_c = Saved;\nexport default Saved;\n\nvar _c;\n\n$RefreshReg$(_c, \"Saved\");","map":{"version":3,"sources":["C:/Users/PC/MonashBootCamp/GoogleBookSearch/client/src/pages/Saved.js"],"names":["React","useState","useEffect","Wrapper","API","SavedBooks","Saved","book","setBook","loadBooks","getSavedBooks","then","response","console","log","data","catch","err","removeBook","id","deleteBook","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAFgB,CAKhB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT,CANgB,CAUhB;;AACA,QAAMA,SAAS,GAAG,MAAM;AACpBL,IAAAA,GAAG,CAACM,aAAJ,GACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAP,MAAAA,OAAO,CAACI,QAAQ,CAACG,IAAV,CAAP;AACH,KAJL,EAOKC,KAPL,CAOWC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAPlB;AAQH,GATD,CAXgB,CAwBhB;;;AACA,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACrBf,IAAAA,GAAG,CAACgB,UAAJ,CAAeD,EAAf,EACKR,IADL,CACUC,QAAQ,IAAIH,SAAS,EAD/B,EAEKO,KAFL,CAEWC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAFlB;AAIH,GALD;;AAQA,sBACI,QAAC,OAAD;AAAA,cAEMV,IAAI,CAACc,MAAL,GAAc,CAAd,GAAoBd,IAAI,CAACe,GAAL,CAASf,IAAI,IAAI;AAEnC,0BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,IAAlB;AAAwB,QAAA,UAAU,EAAEW;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KALqB,CAApB,GAKG;AAPT;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA7CD;;GAAMZ,K;;KAAAA,K;AA+CN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Wrapper from \"../components/Wrapper\";\nimport API from \"../utils/API\";\nimport SavedBooks from \"../components/SavedBooks\";\n\n\nconst Saved = () => {\n    // Setting initial state\n    const [book, setBook] = useState([]);\n\n\n    // Load all saved books and store them with setBooks\n    useEffect(() => {\n        loadBooks()\n    }, [])\n\n    // Load all saved books and set them to books\n    const loadBooks = () => {\n        API.getSavedBooks()\n            .then(response => {\n                console.log(response.data)\n                setBook(response.data)\n            }\n               \n            )\n            .catch(err => console.log(err));\n    };\n\n    \n\n    // Removes a book from the database with a give id, then reloads books from db\n    const removeBook = id => {\n        API.deleteBook(id)\n            .then(response => loadBooks())\n            .catch(err => console.log(err));\n\n    }\n\n\n    return (\n        <Wrapper>\n              \n            { book.length > 0 ?   book.map(book => {\n             \n                return (\n                    <SavedBooks book={book} removeBook={removeBook} />\n                )\n            }) : \"\"} \n           \n        </Wrapper>\n    )\n}\n\nexport default Saved;"]},"metadata":{},"sourceType":"module"}